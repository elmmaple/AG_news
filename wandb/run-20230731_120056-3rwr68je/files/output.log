
[34m[1mwandb[39m[22m: [33mWARNING[39m The save_model argument by default saves the model in the HDF5 format that cannot save custom objects like subclassed models and custom layers. This behavior will be deprecated in a future release in favor of the SavedModel format. Meanwhile, the HDF5 model is saved as W&B files and the SavedModel as W&B Artifacts.
Model: "sequential"
_________________________________________________________________
 Layer (type)                Output Shape              Param #
=================================================================
 embedding (Embedding)       (None, 177, 20)           200000
 bidirectional (Bidirection  (None, 177, 256)          152576
 al)
 bidirectional_1 (Bidirecti  (None, 177, 128)          164352
 onal)
 global_max_pooling1d (Glob  (None, 128)               0
 alMaxPooling1D)
 dense (Dense)               (None, 1024)              132096
 dropout (Dropout)           (None, 1024)              0
 dense_1 (Dense)             (None, 512)               524800
 dropout_1 (Dropout)         (None, 512)               0
 dense_2 (Dense)             (None, 256)               131328
 dropout_2 (Dropout)         (None, 256)               0
 dense_3 (Dense)             (None, 128)               32896
 dropout_3 (Dropout)         (None, 128)               0
 dense_4 (Dense)             (None, 64)                8256
 dropout_4 (Dropout)         (None, 64)                0
 dense_5 (Dense)             (None, 4)                 260
=================================================================
Total params: 1346564 (5.14 MB)
Trainable params: 1346564 (5.14 MB)
Non-trainable params: 0 (0.00 Byte)
_________________________________________________________________
Epoch 1/5









































































































































































































469/469 [==============================] - ETA: 0s - loss: 0.4135 - accuracy: 0.8451
/Users/cardistchien/anaconda3/lib/python3.10/site-packages/keras/src/engine/training.py:3000: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.
  saving_api.save_model(
Epoch 1: val_accuracy improved from -inf to 0.90882, saving model to weights.h5
[34m[1mwandb[39m[22m: Adding directory to artifact (/Users/cardistchien/Documents/GitHub/AG_news/wandb/run-20230731_120056-3rwr68je/files/model-best)... Done. 0.1s
469/469 [==============================] - 4389s 9s/step - loss: 0.4135 - accuracy: 0.8451 - val_loss: 0.2745 - val_accuracy: 0.9088
Epoch 2/5





















































































































































































































469/469 [==============================] - ETA: 0s - loss: 0.2412 - accuracy: 0.9218
/Users/cardistchien/anaconda3/lib/python3.10/site-packages/keras/src/engine/training.py:3000: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.
  saving_api.save_model(
Epoch 2: val_accuracy improved from 0.90882 to 0.91224, saving model to weights.h5
[34m[1mwandb[39m[22m: Adding directory to artifact (/Users/cardistchien/Documents/GitHub/AG_news/wandb/run-20230731_120056-3rwr68je/files/model-best)... Done. 0.1s
469/469 [==============================] - 449s 957ms/step - loss: 0.2412 - accuracy: 0.9218 - val_loss: 0.2664 - val_accuracy: 0.9122
Epoch 3/5














































































































































































































469/469 [==============================] - ETA: 0s - loss: 0.2040 - accuracy: 0.9321
Epoch 3: val_accuracy did not improve from 0.91224
469/469 [==============================] - 427s 910ms/step - loss: 0.2040 - accuracy: 0.9321 - val_loss: 0.2728 - val_accuracy: 0.9118
Epoch 4/5






















































































































































































































469/469 [==============================] - ETA: 0s - loss: 0.1757 - accuracy: 0.9400
Epoch 4: val_accuracy did not improve from 0.91224
469/469 [==============================] - 441s 939ms/step - loss: 0.1757 - accuracy: 0.9400 - val_loss: 0.2884 - val_accuracy: 0.9122
Epoch 5/5




















































































































































































































469/469 [==============================] - ETA: 0s - loss: 0.1508 - accuracy: 0.9483
Epoch 5: val_accuracy improved from 0.91224 to 0.91250, saving model to weights.h5
469/469 [==============================] - 435s 927ms/step - loss: 0.1508 - accuracy: 0.9483 - val_loss: 0.2982 - val_accuracy: 0.9125